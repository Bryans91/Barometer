<!--
Requiments:
Stap 4: Projectdocent geeft elke projectgroep een Tutor. Door bij elke projectgroep de naam van hun
tutor te selecteren.
1.4.1 Het systeem weet welke docenten ook als tutor voorkomen
1.4.2 De gebruiker kan nieuwe tutor toevoegen
1.4.3 De gebruiker kan elk projectgroep een tutor toewijzen
 1.4.3.1 Het systeem geeft een lijst van tutors waar de gebruiker uit kan kiezen
1.4.4 Het systeem registreert het nieuwe project
 1.4.4.1 Het systeem onthoudt de projectgroepen in het nieuwe project
 1.4.4.2 Het systeem onthoudt de link tussen tutor en projectgroep
1.4.5 Het systeem meldt als een projectgroep nog geen tutor heeft
-->
@model IEnumerable<Barometer.Models.StudentGrades>
@{
    ViewBag.Title = "Laat voortgang student zien";
    ViewBag.Tag = "showstats";
}


@section Styles {
    <link href="@Url.Content("~/Content/pages/showstats.css")" rel="stylesheet" type="text/css" />
}
@section Scripts {
    <script type="text/javascript" src="@Url.Content("~/Scripts/jqBarGraph.js")"></script>
}

<h2>@ViewBag.Title</h2>

<div class="@ViewBag.Tag">

    <form method="post" enctype="multipart/form-data">
        <table>
            <tr>
                <td> Zoek een student: </td>
                <td> <input name="searchTerm" type="text" /> </td>
                <td> <input type="submit" value="Zoek" /> </td>
            </tr>
        </table>
    </form>


    @{
        if (Model != null)
        {
            int count = 0;
            if (Model.First() != null) {
                if (Model.First().Student != null) { 
                    int studentNr = Model.First().Student.Studentnr;
                    foreach (var s in Model)
                    {
                        if (count == 0 && s.Student.Studentnr == studentNr)
                        {
                            count++;
                        }

                        if (s.Student.Studentnr != studentNr)
                        {
                            studentNr = s.Student.Studentnr;
                            count++;
                        }

                    }
                }
            }


            if (count == 1) // if 1 student
            {
                <div class="studentinfo">
                    <table>
                        <tr>
                            <td class="title">Naam:</td>
                            <td>@Model.First().Student.FirstName @Model.First().Student.LastName </td>
                        </tr>
                        <tr>
                            <td class="title">Studentnummer:</td>
                            <td>@Model.First().Student.Studentnr</td>
                        </tr>
                    </table>
                </div>

                <div id="multiGraph"></div>



                <div id="stackedGraph"></div>

                <script>

                    studentGrades = new Array();
                    subjects = new Array();
                    @{

                            Barometer.Models.Project[] studentProjects = Model.Select(s => s.Project).Distinct().ToArray();
                            int nrOfProjects = studentProjects.Length;

                            //dataloop
                            for(int i = 0 ; i < nrOfProjects ; i++){
                                string projectName = studentProjects[i].Name;
                                    <text>
                                    grades = new Array();
                                    </text>
                                foreach (var p in Model.Where(s => s.Project.Name == projectName)) {
                                    if (i == 0)
                                    {
                                        <text>
                                        subjects.push(@p.SubjectQuestion.Subject);
                                       </text>
                                    }
                                <text>
                                grades.push(@p.Grade);
                                </text>
                                 }

                                 <text>
                                temp = new Array();
                                temp.push(grades);
                                temp.push(@projectName);
                                studentGrades.push(temp);
                                </text>
                            }

                    }
                    /*
                    studentGrades = new Array(
                            [[7, 4, 5, 3, 5, 6, 6], 'Project Archer'],
                            [[5, 6, 7, 4, 5, 6, 5], 'Project Barometer'],
                            [[7, 4, 5, 8, 6, 8, 7], 'Project C#'],
                            [[8, 6, 7, 5, 6, 7, 8], 'Project Delphi'],
                            [[5, 6, 7, 8, 6, 7, 8], 'Project Elephant'],
                            [[6, 9, 6, 8, 7, 7, 6], 'Project Food']
                        );

                                 legends: ['Kennis van/over vaardigheden', 'Inzet/motivatie', 'Inzicht eigen functioneren',
                                'Samenwerken', 'Schriftelijk communiceren', 'Mondeling communiceren', 'Projectmatig werken']
                        */


                    $("#multiGraph").jqBarGraph({
                        data: studentGrades,
                        colors: ['#67000d', '#cc4c02', '#cb181d', '#993404', '#ef3b2c', '#662506', '#fb6a4a'],
                        legends: subjects
                    });

                </script>
            }
            else if (count > 1) // multiple students
            {
                <table>
                    <tr>
                        <td>
                            Studentnummer
                        </td>
                        <td>
                            Naam
                        </td>
                    </tr>
                    @foreach (var s in Model)
                    {
                        <tr>
                            <td>
                                @s.Student.Studentnr
                            </td>
                            <td>
                                @Ajax.ActionLink(@s.Student.FirstName + " " + @s.Student.LastName, "ShowStats", new { searchTerm = @s.Student.Studentnr }, new AjaxOptions { HttpMethod = "POST" });
                            </td>

                        </tr>
                    }
                </table>
            }
        }
        else
        {
            <p><br />Geen student geselecteerd</p>
        }

    }

    <div class="clear">&nbsp;</div>
    <div class="buttons">
        <form name="@ViewBag.Tag" action="#" method="post">
            <button type="submit">Accepteer</button>
            <button type="submit">Ga terug</button>
        </form>
    </div>

</div>