@model IEnumerable<Barometer.Models.FillList>
<!--
Requirements:
Stap 5: Projectdocent opent nieuwe vragenlijst
1.5.1 De gebruiker kan nieuwe vragenlijst aanmaken
 1.5.1.1 De gebruiker moet rechten hebben voor het maken van een nieuwe vragenlijst
1.5.2 Het systeem kan standaard (opgeslagen) vragenlijst openen
 1.5.2.1 De gebruiker kan een standaard vragenlijst invoeren
Stap 6: Projectdocent vult de buiten de standaard beoordelingscriteria de lijst in , gezien elk project 
verschillende opdrachten heeft
1.6.1 De gebruiker kan de beoordelingscriteria van de genereerde lijst aanpassen
1.6.2 Het systeem registreert de nieuwe vragenlijst bij het huidige project
 1.6.2.1 Het systeem onthoudt de beoordelingscriteria van de vragenlijst
-->

@{
    ViewBag.Title = "Maak vragenlijst";
    ViewBag.Tag = "makequestionlist";
}

@section Styles {
    <link href="@Url.Content("~/Content/pages/makequestionlist.css")" rel="stylesheet" type="text/css" />
}

@using (Html.BeginForm("MakeQuestionList2", "ProjectDocent", FormMethod.Post))
{
    <table>
        <tr>
            <td><label for="text">Vul de vragenlijst in:</label></td>
        </tr>
    </table>
    <table>
@for (var i = 0; i < Model.ToArray().Length; i++ )
{
    <tr>
        <td><b>
            @if (i == 0)
            {
                @Model.ElementAt(i).SubjectQuestions.Subject
            }
            else
            { 
                if (Model.ElementAt(i).SubjectQuestions.Id != Model.ElementAt(i-1).SubjectQuestions.Id)
                {
                    @Model.ElementAt(i).SubjectQuestions.Subject
                }
            }
        </b></td>  
        <td>
            <input name="@(Model.ElementAt(i).SubjectQuestions.Id)-@i" value="@Model.ElementAt(i).Question.Name" size="50"/>
        </td>      
    </tr>
        
}

    </table>
        <div class="buttons">
            <button type="submit">Accepteer</button>
            <button type="submit">Ga terug</button>
        </div>

  
}
</div>